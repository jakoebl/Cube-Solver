
# 200: counter-clockwise rot
# 100: clockwise rot
# (all in relation to U and D)
# since we are in g1, F, Fp, B, and Bp are no longer needed
# strings: corners first, then edges
R_coord = (0, 102, 205, 3, 4, 106, 201, 7, 8, 16, 10, 11, 12, 19, 14, 15, 13, 17, 18, 9)
R2_coord = (0, 5, 6, 3, 4, 1, 2, 7, 8, 13, 10, 11, 12, 9, 14, 15, 19, 17, 18, 16)
Rp_coord = (0, 106, 201, 3, 4, 102, 205, 7, 8, 19, 10, 11, 12, 16, 14, 15, 9, 17, 18, 13)

F2_coord = (0, 1, 4, 5, 2, 3, 6, 7, 8, 9, 12, 11, 10, 13, 14, 15, 17, 16, 18, 19)

U_coord = (3, 0, 1, 2, 4, 5, 6, 7, 11, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19)
U2_coord = (2, 3, 0, 1, 4, 5, 6, 7, 10, 11, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19)
Up_coord = (1, 2, 3, 0, 4, 5, 6, 7, 9, 10, 11, 8, 12, 13, 14, 15, 16, 17, 18, 19)

L_coord = (207, 1, 2, 100, 203, 5, 6, 104, 8, 9, 10, 18, 12, 13, 14, 17, 16, 11, 15, 19)
L2_coord = (4, 1, 2, 7, 0, 5, 6, 3, 8, 9, 10, 15, 12, 13, 14, 11, 16, 18, 17, 19)
Lp_coord = (203, 1, 2, 104, 207, 5, 6, 100, 8, 9, 10, 17, 12, 13, 14, 18, 16, 15, 11, 19)

B2_coord = (6, 7, 2, 3, 4, 5, 0, 1, 14, 9, 10, 11, 12, 13, 8, 15, 16, 17, 19, 18)

D_coord = (0, 1, 2, 3, 7, 4,  5, 6, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19)
D2_coord = (0, 1, 2, 3, 6, 7, 4, 5, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19)
Dp_coord = (0, 1, 2, 3, 5, 6, 7, 4, 8, 9, 10, 11, 13, 14, 15, 12, 16, 17, 18, 19)

# moves for UD slice
R_flip = (0, 4, 2, 3, 9, 5, 6, 1, 8, 7, 10, 11)
R2_flip = (0, 9, 2, 3, 7, 5, 6, 4, 8, 1, 10, 11)
Rp_flip = (0, 7, 2, 3, 1, 5, 6, 9, 8, 4, 10, 11)

F2_flip = (0, 1, 8, 3, 5, 4, 6, 7, 2, 9, 10, 11)

U_flip = (3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11)
U2_flip = (2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11)
Up_flip = (1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11)

L_flip = (0, 1, 2, 6, 4, 3, 11, 7, 8, 9, 10, 5)
L2_flip = (0, 1, 2, 11, 4, 6, 5, 7, 8, 9, 10, 3)
Lp_flip = (0, 1, 2, 5, 4, 11, 3, 7, 8, 9, 10, 6)

B2_flip = (10, 1, 2, 3, 4, 5, 7, 6, 8, 9, 0, 11)

D_flip = (0, 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10)
D2_flip = (0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9)
Dp_flip = (0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 8)

moves = [U_coord, Up_coord, U2_coord, F2_coord, L_coord, Lp_coord, L2_coord,
         B2_coord, R_coord, Rp_coord, R2_coord, D_coord, Dp_coord, D2_coord]

moves_ed = [U_flip, Up_flip, U2_flip, F2_flip, L_flip, Lp_flip, L2_flip,
            B2_flip, R_flip, Rp_flip, R2_flip, D_flip, Dp_flip, D2_flip]


lookup_UD = ['000000001111', '000000010111', '000000100111', '000001000111', '000010000111', '000100000111', '001000000111', '010000000111', '100000000111', '000000011011', '000000101011', '000001001011', '000010001011', '000100001011', '001000001011', '010000001011', '100000001011', '000000110011', '000001010011', '000010010011', '000100010011', '001000010011', '010000010011', '100000010011', '000001100011', '000010100011', '000100100011', '001000100011', '010000100011', '100000100011', '000011000011', '000101000011', '001001000011', '010001000011', '100001000011', '000110000011', '001010000011', '010010000011', '100010000011', '001100000011', '010100000011', '100100000011', '011000000011', '101000000011', '110000000011', '000000011101', '000000101101', '000001001101', '000010001101', '000100001101', '001000001101', '010000001101', '100000001101', '000000110101', '000001010101', '000010010101', '000100010101', '001000010101', '010000010101', '100000010101', '000001100101', '000010100101', '000100100101', '001000100101', '010000100101', '100000100101', '000011000101', '000101000101', '001001000101', '010001000101', '100001000101', '000110000101', '001010000101', '010010000101', '100010000101', '001100000101', '010100000101', '100100000101', '011000000101', '101000000101', '110000000101', '000000111001', '000001011001', '000010011001', '000100011001', '001000011001', '010000011001', '100000011001', '000001101001', '000010101001', '000100101001', '001000101001', '010000101001', '100000101001', '000011001001', '000101001001', '001001001001', '010001001001', '100001001001', '000110001001', '001010001001', '010010001001', '100010001001', '001100001001', '010100001001', '100100001001', '011000001001', '101000001001', '110000001001', '000001110001', '000010110001', '000100110001', '001000110001', '010000110001', '100000110001', '000011010001', '000101010001', '001001010001', '010001010001', '100001010001', '000110010001', '001010010001', '010010010001', '100010010001', '001100010001', '010100010001', '100100010001', '011000010001', '101000010001', '110000010001', '000011100001', '000101100001', '001001100001', '010001100001', '100001100001', '000110100001', '001010100001', '010010100001', '100010100001', '001100100001', '010100100001', '100100100001', '011000100001', '101000100001', '110000100001', '000111000001', '001011000001', '010011000001', '100011000001', '001101000001', '010101000001', '100101000001', '011001000001', '101001000001', '110001000001', '001110000001', '010110000001', '100110000001', '011010000001', '101010000001', '110010000001', '011100000001', '101100000001', '110100000001', '111000000001', '000000011110', '000000101110', '000001001110', '000010001110', '000100001110', '001000001110', '010000001110', '100000001110', '000000110110', '000001010110', '000010010110', '000100010110', '001000010110', '010000010110', '100000010110', '000001100110', '000010100110', '000100100110', '001000100110', '010000100110', '100000100110', '000011000110', '000101000110', '001001000110', '010001000110', '100001000110', '000110000110', '001010000110', '010010000110', '100010000110', '001100000110', '010100000110', '100100000110', '011000000110', '101000000110', '110000000110', '000000111010', '000001011010', '000010011010', '000100011010', '001000011010', '010000011010', '100000011010', '000001101010', '000010101010', '000100101010', '001000101010', '010000101010', '100000101010', '000011001010', '000101001010', '001001001010', '010001001010', '100001001010', '000110001010', '001010001010', '010010001010', '100010001010', '001100001010', '010100001010', '100100001010', '011000001010', '101000001010', '110000001010', '000001110010', '000010110010', '000100110010', '001000110010', '010000110010', '100000110010', '000011010010', '000101010010', '001001010010', '010001010010', '100001010010', '000110010010', '001010010010', '010010010010', '100010010010', '001100010010', '010100010010', '100100010010', '011000010010', '101000010010', '110000010010', '000011100010', '000101100010', '001001100010', '010001100010', '100001100010', '000110100010', '001010100010', '010010100010', '100010100010', '001100100010', '010100100010', '100100100010', '011000100010', '101000100010', '110000100010', '000111000010', '001011000010', '010011000010', '100011000010', '001101000010', '010101000010', '100101000010', '011001000010', '101001000010', '110001000010', '001110000010', '010110000010', '100110000010', '011010000010', '101010000010', '110010000010', '011100000010', '101100000010', '110100000010', '111000000010', '000000111100', '000001011100', '000010011100', '000100011100', '001000011100', '010000011100', '100000011100', '000001101100', '000010101100', '000100101100', '001000101100', '010000101100', '100000101100', '000011001100', '000101001100', '001001001100', '010001001100', '100001001100', '000110001100', '001010001100', '010010001100', '100010001100', '001100001100', '010100001100', '100100001100', '011000001100', '101000001100', '110000001100', '000001110100', '000010110100', '000100110100', '001000110100', '010000110100', '100000110100', '000011010100', '000101010100', '001001010100', '010001010100', '100001010100', '000110010100', '001010010100', '010010010100', '100010010100', '001100010100', '010100010100', '100100010100', '011000010100', '101000010100', '110000010100', '000011100100', '000101100100', '001001100100', '010001100100', '100001100100', '000110100100', '001010100100', '010010100100', '100010100100', '001100100100', '010100100100', '100100100100', '011000100100', '101000100100', '110000100100', '000111000100', '001011000100', '010011000100', '100011000100', '001101000100', '010101000100', '100101000100', '011001000100', '101001000100', '110001000100', '001110000100', '010110000100', '100110000100', '011010000100', '101010000100', '110010000100', '011100000100', '101100000100', '110100000100', '111000000100', '000001111000', '000010111000', '000100111000', '001000111000', '010000111000', '100000111000', '000011011000', '000101011000', '001001011000', '010001011000', '100001011000', '000110011000', '001010011000', '010010011000', '100010011000', '001100011000', '010100011000', '100100011000', '011000011000', '101000011000', '110000011000', '000011101000', '000101101000', '001001101000', '010001101000', '100001101000', '000110101000', '001010101000', '010010101000', '100010101000', '001100101000', '010100101000', '100100101000', '011000101000', '101000101000', '110000101000', '000111001000', '001011001000', '010011001000', '100011001000', '001101001000', '010101001000', '100101001000', '011001001000', '101001001000', '110001001000', '001110001000', '010110001000', '100110001000', '011010001000', '101010001000', '110010001000', '011100001000', '101100001000', '110100001000', '111000001000', '000011110000', '000101110000', '001001110000', '010001110000', '100001110000', '000110110000', '001010110000', '010010110000', '100010110000', '001100110000', '010100110000', '100100110000', '011000110000', '101000110000', '110000110000', '000111010000', '001011010000', '010011010000', '100011010000', '001101010000', '010101010000', '100101010000', '011001010000', '101001010000', '110001010000', '001110010000', '010110010000', '100110010000', '011010010000', '101010010000', '110010010000', '011100010000', '101100010000', '110100010000', '111000010000', '000111100000', '001011100000', '010011100000', '100011100000', '001101100000', '010101100000', '100101100000', '011001100000', '101001100000', '110001100000', '001110100000', '010110100000', '100110100000', '011010100000', '101010100000', '110010100000', '011100100000', '101100100000', '110100100000', '111000100000', '001111000000', '010111000000', '100111000000', '011011000000', '101011000000', '110011000000', '011101000000', '101101000000', '110101000000', '111001000000', '011110000000', '101110000000', '110110000000', '111010000000', '111100000000']


# takes coord and flip_move
def move(string, move):  # coordinate int
    result = ""
    for element in move:
        if element < 100:
            result += string[element]
        else:
            if element > 199:  # counter-clockwise flip
                result += str((int(string[element % 100]) + 2) % 3)
            else:  # clockwise flip
                result += str((int(string[element % 100]) + 1) % 3)
    return result


# convert back to coordinate from 7 bit ternary string
def co_coordinate(string):
    exponent = 6
    result = 0
    for bit in string:
        if bit == "1":
            result += 3 ** exponent
        elif bit == "2":
            result += 2 * 3 ** exponent
        exponent -= 1
        if exponent == -1:
            break
    return result


# convert back to coordinate from 12 bit binary string
def ed_coordinate(string):
    return lookup_UD.index(string)


def coordinate(string):
    return ed_coordinate(string[8] + string[9] + string[10] + string[11] + string[12] + string[13] + string[14] + string[15] + string[16] + string[17] + string[18] + string[19]) + 495 * co_coordinate(string[0] + string[1] + string[2] + string[3] + string[4] + string[5] + string[6] + string[7])


# applies all moves to string form of a coordinate and stores the converted result in a set
def get_moves(string):
    result = list()
    for element in moves:
        result.append(move(string, element))
    return tuple(result)


# generates empty lookup list with 495 sublists (3 ** 7 elements each)
def gen_empty_lookup():
    for index in range(1082565):
        lookup.append("")
    lookup[coordinate('20012001000100011001')] = [4]
    lookup[coordinate('01200120010001000110')] = [8]


def is_new(pos, distribution):
    for depth in distribution:
        if pos in depth:
            return False
    return True


def gen_lookup():
    dist = [{"00000000000000001111"}, {'20012001000100011001', '01200120010001000110'}]
    gen_empty_lookup()
    while dist[-1]:  # While latest set not empty
        print(len(dist[-1]))  # Shows distribution
        dist.append(set())
        for pos in dist[-2]:
            for subpos in get_moves(pos):
                if is_new(subpos, dist):
                    dist[-1].add(subpos)
                    lookup[coordinate(subpos)] = lookup[coordinate(pos)] + [get_moves(pos).index(subpos)]


# writes lookup for g2 to file
def write_lookup(file):
    gen_empty_lookup()
    gen_lookup()
    table_g2 = open(file, "w")
    for lists in lookup:
        for element in lists:
            table_g2.write(str(element))
            table_g2.write(" ")
        table_g2.write("\n")
    table_g2.close()


lookup = []
# gen_lookup()